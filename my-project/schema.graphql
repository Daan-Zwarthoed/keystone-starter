# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Header {
  id: ID!
  text: Header_text_Document
  logo: ImageFieldOutput
}

type Header_text_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

interface ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  ref: String!
  url: String!
}

enum ImageExtension {
  jpg
  png
  webp
  gif
}

input HeaderWhereUniqueInput {
  id: ID
}

input HeaderWhereInput {
  AND: [HeaderWhereInput!]
  OR: [HeaderWhereInput!]
  NOT: [HeaderWhereInput!]
  id: IDFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input HeaderOrderByInput {
  id: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input HeaderUpdateInput {
  text: JSON
  logo: ImageFieldInput
}

input ImageFieldInput {
  upload: Upload
  ref: String
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

input HeaderUpdateArgs {
  where: HeaderWhereUniqueInput!
  data: HeaderUpdateInput!
}

input HeaderCreateInput {
  text: JSON
  logo: ImageFieldInput
}

type Collage {
  id: ID!
  text: Collage_text_Document
  image: ImageFieldOutput
}

type Collage_text_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

input CollageWhereUniqueInput {
  id: ID
}

input CollageWhereInput {
  AND: [CollageWhereInput!]
  OR: [CollageWhereInput!]
  NOT: [CollageWhereInput!]
  id: IDFilter
}

input CollageOrderByInput {
  id: OrderDirection
}

input CollageUpdateInput {
  text: JSON
  image: ImageFieldInput
}

input CollageUpdateArgs {
  where: CollageWhereUniqueInput!
  data: CollageUpdateInput!
}

input CollageCreateInput {
  text: JSON
  image: ImageFieldInput
}

type Landing {
  id: ID!
  text: Landing_text_Document
  background: ImageFieldOutput
}

type Landing_text_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

input LandingWhereUniqueInput {
  id: ID
}

input LandingWhereInput {
  AND: [LandingWhereInput!]
  OR: [LandingWhereInput!]
  NOT: [LandingWhereInput!]
  id: IDFilter
}

input LandingOrderByInput {
  id: OrderDirection
}

input LandingUpdateInput {
  text: JSON
  background: ImageFieldInput
}

input LandingUpdateArgs {
  where: LandingWhereUniqueInput!
  data: LandingUpdateInput!
}

input LandingCreateInput {
  text: JSON
  background: ImageFieldInput
}

type AboutMe {
  id: ID!
  text: AboutMe_text_Document
  image: ImageFieldOutput
}

type AboutMe_text_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

input AboutMeWhereUniqueInput {
  id: ID
}

input AboutMeWhereInput {
  AND: [AboutMeWhereInput!]
  OR: [AboutMeWhereInput!]
  NOT: [AboutMeWhereInput!]
  id: IDFilter
}

input AboutMeOrderByInput {
  id: OrderDirection
}

input AboutMeUpdateInput {
  text: JSON
  image: ImageFieldInput
}

input AboutMeUpdateArgs {
  where: AboutMeWhereUniqueInput!
  data: AboutMeUpdateInput!
}

input AboutMeCreateInput {
  text: JSON
  image: ImageFieldInput
}

type Carrousel {
  id: ID!
  text: Carrousel_text_Document
  image: ImageFieldOutput
}

type Carrousel_text_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

input CarrouselWhereUniqueInput {
  id: ID
}

type LocalImageFieldOutput implements ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  ref: String!
  url: String!
}

type CloudImageFieldOutput implements ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  ref: String!
  url: String!
}

input CarrouselWhereInput {
  AND: [CarrouselWhereInput!]
  OR: [CarrouselWhereInput!]
  NOT: [CarrouselWhereInput!]
  id: IDFilter
}

input CarrouselOrderByInput {
  id: OrderDirection
}

input CarrouselUpdateInput {
  text: JSON
  image: ImageFieldInput
}

input CarrouselUpdateArgs {
  where: CarrouselWhereUniqueInput!
  data: CarrouselUpdateInput!
}

input CarrouselCreateInput {
  text: JSON
  image: ImageFieldInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  createHeader(data: HeaderCreateInput!): Header
  createHeaders(data: [HeaderCreateInput!]!): [Header]
  updateHeader(where: HeaderWhereUniqueInput!, data: HeaderUpdateInput!): Header
  updateHeaders(data: [HeaderUpdateArgs!]!): [Header]
  deleteHeader(where: HeaderWhereUniqueInput!): Header
  deleteHeaders(where: [HeaderWhereUniqueInput!]!): [Header]
  createCollage(data: CollageCreateInput!): Collage
  createCollages(data: [CollageCreateInput!]!): [Collage]
  updateCollage(
    where: CollageWhereUniqueInput!
    data: CollageUpdateInput!
  ): Collage
  updateCollages(data: [CollageUpdateArgs!]!): [Collage]
  deleteCollage(where: CollageWhereUniqueInput!): Collage
  deleteCollages(where: [CollageWhereUniqueInput!]!): [Collage]
  createLanding(data: LandingCreateInput!): Landing
  createLandings(data: [LandingCreateInput!]!): [Landing]
  updateLanding(
    where: LandingWhereUniqueInput!
    data: LandingUpdateInput!
  ): Landing
  updateLandings(data: [LandingUpdateArgs!]!): [Landing]
  deleteLanding(where: LandingWhereUniqueInput!): Landing
  deleteLandings(where: [LandingWhereUniqueInput!]!): [Landing]
  createAboutMe(data: AboutMeCreateInput!): AboutMe
  createAboutMes(data: [AboutMeCreateInput!]!): [AboutMe]
  updateAboutMe(
    where: AboutMeWhereUniqueInput!
    data: AboutMeUpdateInput!
  ): AboutMe
  updateAboutMes(data: [AboutMeUpdateArgs!]!): [AboutMe]
  deleteAboutMe(where: AboutMeWhereUniqueInput!): AboutMe
  deleteAboutMes(where: [AboutMeWhereUniqueInput!]!): [AboutMe]
  createCarrousel(data: CarrouselCreateInput!): Carrousel
  createCarrousels(data: [CarrouselCreateInput!]!): [Carrousel]
  updateCarrousel(
    where: CarrouselWhereUniqueInput!
    data: CarrouselUpdateInput!
  ): Carrousel
  updateCarrousels(data: [CarrouselUpdateArgs!]!): [Carrousel]
  deleteCarrousel(where: CarrouselWhereUniqueInput!): Carrousel
  deleteCarrousels(where: [CarrouselWhereUniqueInput!]!): [Carrousel]
}

type Query {
  headers(
    where: HeaderWhereInput! = {}
    orderBy: [HeaderOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Header!]
  header(where: HeaderWhereUniqueInput!): Header
  headersCount(where: HeaderWhereInput! = {}): Int
  collages(
    where: CollageWhereInput! = {}
    orderBy: [CollageOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Collage!]
  collage(where: CollageWhereUniqueInput!): Collage
  collagesCount(where: CollageWhereInput! = {}): Int
  landings(
    where: LandingWhereInput! = {}
    orderBy: [LandingOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Landing!]
  landing(where: LandingWhereUniqueInput!): Landing
  landingsCount(where: LandingWhereInput! = {}): Int
  aboutMes(
    where: AboutMeWhereInput! = {}
    orderBy: [AboutMeOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [AboutMe!]
  aboutMe(where: AboutMeWhereUniqueInput!): AboutMe
  aboutMesCount(where: AboutMeWhereInput! = {}): Int
  carrousels(
    where: CarrouselWhereInput! = {}
    orderBy: [CarrouselOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Carrousel!]
  carrousel(where: CarrouselWhereUniqueInput!): Carrousel
  carrouselsCount(where: CarrouselWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
